# Generated by Django 4.2.3 on 2023-07-16 14:39

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Actor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50, verbose_name='Имя')),
                ('last_name', models.CharField(max_length=50, verbose_name='Фамилия')),
                ('age', models.SmallIntegerField(default=0, verbose_name='Возраст')),
                ('discription', models.TextField(verbose_name='Описание')),
                ('url', models.SlugField(max_length=160, unique=True)),
            ],
            options={
                'verbose_name': 'Актёры и Режиссёры',
                'verbose_name_plural': 'Актёры и Режиссёры',
            },
        ),
        migrations.CreateModel(
            name='Film',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='', verbose_name='Постер')),
                ('name', models.CharField(max_length=100, verbose_name='Название')),
                ('discription', models.TextField(verbose_name='Описание')),
                ('url', models.SlugField(max_length=160, unique=True)),
                ('date', models.DateTimeField(verbose_name='Дата выхода:')),
                ('actor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='acted_in', to='main.actor')),
                ('director', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='directed_films', to='main.actor')),
            ],
            options={
                'verbose_name': 'Фильм',
                'verbose_name_plural': 'Фильмы',
            },
        ),
        migrations.AddField(
            model_name='actor',
            name='films',
            field=models.ManyToManyField(related_name='actors', to='main.film', verbose_name='Фильмы'),
        ),
    ]
